% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pcgen.R
\name{pcgen}
\alias{pcgen}
\title{Causal inference with genetic effects}
\usage{
pcgen(
  suffStat,
  covariates = NULL,
  QTLs = integer(),
  K = NULL,
  replicates = TRUE,
  use.manova = TRUE,
  alpha = 0.01,
  m.max = Inf,
  fixedEdges = NULL,
  fixedGaps = NULL,
  use.res = FALSE,
  res.cor = NULL,
  max.iter = 50,
  stop.if.significant = TRUE,
  NAdelete = FALSE,
  verbose = FALSE,
  return.pvalues = FALSE
)
}
\arguments{
\item{suffStat}{A data.frame with \eqn{(p+1)} columns, the first of which is
the factor G (genotype, i.e samples' IDs) and subsequent columns contain
the traits, and optionally some QTLs. The name of the first column should
be G. Should not contain covariates.}

\item{covariates}{A data.frame containing covariates that should always be
used in each conditional independence test. Should be either \code{NULL}
(default) or a data.frame with the same number of rows as \code{suffStat}.
An intercept is already included for each trait in suffStat; covariates
should not contain a column of ones.}

\item{QTLs}{Column numbers in \code{suffStat} that correspond to QTLs. These
may be partly in \eqn{S} and \eqn{x} and \eqn{y}, but \eqn{x} and \eqn{y}
cannot be both QTLs. Note: the factor genotype (column number 1) may occur
in S, as well as x and y}

\item{K}{The kinship (i.e genetic relatedness matrix). It's a marker-based
relatedness (kinship) matrix of dimension \eqn{n x n}, \eqn{n} being the
number of unique genotypes in the first column in \code{suffStat}. If
\code{suffStat} contains replicates, this argument should be set to
\code{NULL} (the default). If \code{NULL} (the default), independent
genetic effects are assumed. In case of replicates, the resulting
relatedness of the observations will be \eqn{Z K Z^t}, where \eqn{Z} is the
incidence matrix assigning plants to genotypes.}

\item{replicates}{Logical. Set to \code{TRUE} if your data (experimental
design) is balanced, and there are replicates. In this case, MANOVA will
set starting values for fitting and the kinship matrix \code{K} should not
be provided. If there are no replicates (unique genotypes), set
\code{replicates = FALSE} and provide the kinship matrix \code{K}
parameter. Default is \code{TRUE}}

\item{use.manova}{Set to \code{TRUE} to let MANOVA set starting values for
fitting (Default). This is only valid if your experimental design is
balanced, and there are replicates. If there are no replicates, this
parameter set to \code{FALSE} and the kinship matrix, \code{K}, should be
supplied}

\item{alpha}{The significance level used in each conditional independence
test. Default is 0.01. The test itself of course does not depend on this,
but it is used in the EM-algorithm to speed up calculations. More
precisely, the EM-algorithm is stopped once the P value is below the
significance level. This can be done because the PC algorithm only needs an
accept/ reject decision.}

\item{m.max}{Maximum size of the conditioning sets.}

\item{fixedEdges}{A logical matrix of dimension \eqn{(p+1) \times (p+1)},
where \eqn{p} is the number of traits. The first row and column refer to
the genotype node \code{G}, and subsequent rows and columns to the traits.
As in the \code{pcalg} package, the edge \eqn{[i - j]} is never considered
for removal if the entry \eqn{[i, j]} or \eqn{[j, i]} (or both) are
\code{TRUE}. In that case, the edge is guaranteed to be present in the
resulting graph.}

\item{fixedGaps}{A logical matrix of dimension \eqn{(p+1) \times (p+1)},
where \eqn{p} is the number of traits. The first row and column refer to
the genotype node G, and subsequent rows and columns to the traits. As in
the pcalg package, the edge \eqn{[i - j]} is removed before starting the
algorithm if the entry \eqn{[i, j]} or \eqn{[j, i]} (or both) are
\code{TRUE}. In that case, the edge is guaranteed to be absent in the
resulting graph.}

\item{use.res}{If \code{TRUE}, the test for conditional independence of 2
traits given a set of other traits and \eqn{G} is based on residuals from
GBLUP. If \code{FALSE} (the default), it is based on bivariate mixed
models.}

\item{res.cor}{If \code{use.res = TRUE}, \code{res.cor} should be the
correlation matrix of the residuals of the GBLUP- the residuals can be
obtained using the \code{getResiduals} function. If \code{res.cor} is
provided, it is based on partial correlations among the residuals, tested
using the gaussCItest function from pcalg. In case \code{res.cor} is
\code{NULL} (the default), the test for conditional independence between Yj
and Yk given a set of traits YS is based on a bivariate mixed model.}

\item{max.iter}{Maximum number of iterations in the EM-algorithm, used to fit
the bivariate mixed model (when \code{use.res = FALSE)}.}

\item{stop.if.significant}{If \code{TRUE}, the EM-algorithm used in some of
the conditional independence tests (when \code{use.res = FALSE}) will be
stopped whenever the p-value becomes significant, i.e. below \code{alpha}.
This will speed up calculations, and can be done because (1) the PC
algorithm only needs an accept/reject decision (2) In EM the likelihood is
nondecreasing. Should be put to \code{FALSE} if the precise p-values are of
interest.}

\item{NAdelete}{Logical, and is the NAdelete option in pcalg::pc function:
TRUE deletes the edge corresponding to the conditional independence test
when it returns NA. Default is FALSE}

\item{verbose}{If \code{TRUE}, p-values for the conditional independence
tests are printed}

\item{return.pvalues}{If \code{TRUE}, the maximal p-value for each edge is
returned.}
}
\value{
If \code{return.pvalues = FALSE}, the output is a graph (an object
with S3 class \code{"pcgen"}). If \code{return.pvalues = TRUE}, the output
is a list with elements \code{gr} (the graph) and \code{pMax} (a matrix
with the p-values).
}
\description{
Reconstruction of directed networks with random genetic effects, based on
phenotypic observations. The pcgen algorithm is a modification of the
pc-stable algorithm of Colombo & Maathuis (2014) . It works with and without
replicates, assuming independent genetic effects.
}
\details{
The \code{pcgen} function is based on the \code{pc} function from the pcalg
package (Kalisch et al. (2012) and Hauser and Buhlmann (2012)), with a
different conditional independence test (see \code{pcgenTest}), as well as
modified orientation rules.

Some \code{pc} function parameters are fixed here: \code{skel.method = "stable"},
\code{conservative = FALSE}, \code{maj.rule = TRUE} and \code{solve.confl = TRUE}. As a
results, the resulting graph is fully order-independent (see Colombo and
Maathuis 2014). Additionally, we fixed \code{u2pd = "relaxed"}, so that that an
invalid CPDAG is output in case of conflicting orientation information.
Labels (defining the names of the nodes of the graph) are derived from the
data-frame \code{suffStat}, containing the data.

\code{pcgen} requires phenotypic observations on multiple traits, measured on the
same samples. The current implementation extends the genetic relatedness
matrix definition from K = Z Z^t, Z being the incidence matrix assigning
plants to genotypes (as is common in plants data) to a a marker-based
relatedness matrix definition (appropriate for human data).

The test for conditional independence between Yj and Yk given a set of traits
YS can be based either on a bivariate mixed model (put \code{res.cor = NULL}) or on
partial correlations among the residuals. In the latter case, \code{res.cor} should
be the correlation matrix of the residuals, obtained with \code{getResiduals}.
}
\examples{
\dontrun{
data(simdata)
out <- pcgen(simdata)
rs <- getResiduals(suffStat = simdata)
pc.fit1 <- pcgen(suffStat = simdata, alpha = 0.01, verbose = TRUE,
                 use.res = TRUE, res.cor = cor(rs))
}

}
\references{
\itemize{
\item Kruijer, W., Behrouzi, P., Bustos-Korts, D., Rodríguez-Álvarez,
M. X., Mahmoudi, S. M., Yandell, B., ... & van Eeuwijk, F. A. (2020).
Reconstruction of networks with direct and indirect genetic effects.
\emph{Genetics}, 214(4), 781-807.
}

\itemize{
\item Colombo, D., & Maathuis, M. H. (2014). Order-independent
constraint-based causal structure learning. \emph{The Journal of Machine
Learning Research}, 15(1), 3741-3782.
}

\itemize{
\item Kalisch, M., Machler, M., Colombo, D., Maathuis, M.H. and
Buhlmann, P., 2012. Causal inference using graphical models with the R
package pcalg. \emph{Journal of Statistical Software}, 47(11), pp.1-26.
}

\itemize{
\item Hauser, A. and Buhlmann, P., 2012. Characterization and
greedy learning of interventional Markov equivalence classes of directed
acyclic graphs. Journal of Machine Learning Research, 13(Aug),
pp.2409-2464.
}
}
\seealso{
\code{\link[pcalg]{pc}}
}
\author{
Willem Kruijer and Pariya Behrouzi. Maintainers: Willem Kruijer
\email{willem.kruijer@wur.nl} and Pariya Behrouzi
\email{pariya.behrouzi@gmail.com}
}
